---
- name: Include OS vars
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
  tags:
    - ipsec

- name: Install required packages
  loop: "{{ duploy_packages }}"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  tags:
    - duply

- name: Create profile directory
  loop: "{{ duply_profiles }}"
  loop_control:
    label: "/etc/duply/{{ item.name }}"
  ansible.builtin.file:
    path: "/etc/duply/{{ item.name }}"
    mode: u=rwx,g=,o=
    state: "{{ 'directory' if item.state | default('present') == 'present' else 'absent' }}"
  tags:
    - duply

- name: Write config file
  loop: "{{ duply_profiles }}"
  loop_control:
    label: "/etc/duply/{{ item.name }}/conf"
  when:
    - ('present' if item.state is not defined else item.state) == "present"
  ansible.builtin.template:
    src: config.j2
    dest: "/etc/duply/{{ item.name }}/conf"
    mode: u=rw,g=,o=
  tags:
    - duply

- name: Delete config file
  loop: "{{ duply_profiles }}"
  loop_control:
    label: "/etc/duply/{{ item.name }}/conf"
  when:
    - ('present' if item.state is not defined else item.state) == "absent"
  ansible.builtin.file:
    path: "/etc/duply/{{ item.name }}/conf"
    state: absent
  tags:
    - duply

- name: Write exclude file
  loop: "{{ duply_profiles }}"
  loop_control:
    label: "/etc/duply/{{ item.name }}/exclude"
  when:
    - ('present' if item.state is not defined else item.state) == "present"
  ansible.builtin.template:
    src: exclude.j2
    dest: "/etc/duply/{{ item.name }}/exclude"
    mode: u=rw,g=,o=
  tags:
    - duply

- name: Delete exclude file
  loop: "{{ duply_profiles }}"
  loop_control:
    label: "/etc/duply/{{ item.name }}/exclude"
  when:
    - ('present' if item.state is not defined else item.state) == "absent"
  ansible.builtin.file:
    path: "/etc/duply/{{ item.name }}/exclude"
    state: absent
  tags:
    - duply

- name: Write pre file
  loop: "{{ duply_profiles }}"
  loop_control:
    label: "/etc/duply/{{ item.name }}/pre"
  when:
    - false if item.pre is not defined else (item.pre | length > 0)
  ansible.builtin.copy:
    content: "{{ item.pre }}"
    dest: "/etc/duply/{{ item.name }}/pre"
    mode: u=rwx,g=,o=
  tags:
    - duply

- name: Delete pre file
  loop: "{{ duply_profiles }}"
  loop_control:
    label: "/etc/duply/{{ item.name }}/pre"
  when:
    - true if item.pre is not defined else (item.pre | length <= 0)
  ansible.builtin.file:
    path: "/etc/duply/{{ item.name }}/pre"
    state: absent
  tags:
    - duply

- name: Write post file
  loop: "{{ duply_profiles }}"
  loop_control:
    label: "/etc/duply/{{ item.name }}/post"
  when:
    - false if item.post is not defined else (item.post | length > 0)
  ansible.builtin.copy:
    content: "{{ item.post }}"
    dest: "/etc/duply/{{ item.name }}/post"
    mode: u=rwx,g=,o=
  tags:
    - duply

- name: Delete post file
  loop: "{{ duply_profiles }}"
  loop_control:
    label: "/etc/duply/{{ item.name }}/post"
  when:
    - true if item.post is not defined else (item.post | length <= 0)
  ansible.builtin.file:
    path: "/etc/duply/{{ item.name }}/post"
    state: absent
  tags:
    - duply

- name: Create cronjob entry
  loop: "{{ duply_profiles }}"
  loop_control:
    label: "{{ item.name }}"
  ansible.builtin.cron:
    name: "backup {{ item.name }}"
    minute: "{{ item.minute | default(duply_default_minute) }}"
    hour: "{{ item.hour | default(duply_default_hour) }}"
    day: "{{ item.day | default(duply_default_day) }}"
    month: "{{ item.month | default(duply_default_month) }}"
    weekday: "{{ item.weekday | default(duply_default_weekday) }}"
    job: cronic duply {{ item.name }} {{ item.command | default(duply_default_command) }}
    state: "{{ item.state | default('present') }}"
  tags:
    - duply

...
